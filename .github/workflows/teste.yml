name: Build and Release

on:
  # push:
  #   branches:
  #     - main  # Executa no push para o branch principal
  workflow_dispatch:
      inputs:
        tipo:
          description: "Tipo de incremento de versão (major, minor, patch)"
          required: false
          default: "minor"

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get Version
        id: get_version
        run: |
          VERSION=3.0.0
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Upload VERSION artifact
        uses: actions/upload-artifact@v4
        with:
          name: version
          path: VERSION

  build-windows:
    needs: [version]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Download VERSION artifact
        uses: actions/download-artifact@v4
        with:
          name: version
          
      - name: Read Version
        id: read_version
        shell: cmd
        run: |
          for /F "tokens=*" %%i in (VERSION) do (
            echo VERSION=%%i >> %GITHUB_ENV%
          )
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-executable
          path: dist/windows/file-${{ env.VERSION }}.txt

  release:
    needs: [version, build-windows]
    runs-on: ubuntu-latest

    steps:

      - name: Download version artifact
        uses: actions/download-artifact@v4
        with:
          name: version

      - name: Read Version
        id: read_version
        run: |
          VERSION=$(cat VERSION)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Download Windows Executable
        uses: actions/download-artifact@v4
        with:
          name: windows-executable
          path: dist/windows/file-${{ env.VERSION }}.txt

      - name: Set Windows Executable Path
        run: echo "EXEC_WINDOWS=dist/windows/file-${{ env.VERSION }}.txt" >> $GITHUB_ENV
    
      - name: Debug Release Output
        run: |
          echo "Windows Exec: ${{ env.EXEC_WINDOWS }}"

      
      - name: Download macOS Executable
        uses: actions/download-artifact@v4
        with:
          name: macos-executable
          path: dist/mac/file-${{ env.VERSION }}.txt
          
      - name: Set macOS Executable Path
        run: echo "EXEC_MACOS=dist/mac/${{ env.VERSION }}/baixar-audio-mac" >> $GITHUB_ENV

      - name: Debug Release Output
        run: |
          echo "Windows Exec: ${{ env.EXEC_MACOS }}"


      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ env.VERSION }}"  # Use a versão como tag
          release_name: "Versão ${{ env.VERSION }}"
          draft: false
          prerelease: false

      - name: Debug Release Output
        run: |
          echo "Upload URL: ${{ steps.create_release.outputs.upload_url }}"
      
      - name: Upload Windows Executable to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.EXEC_WINDOWS }}
          asset_name: baixar-audio-windows.exe
          asset_content_type: application/octet-stream

      - name: Upload macOS Executable to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.EXEC_MACOS }}
          asset_name: baixar-audio-mac
          asset_content_type: application/octet-stream
